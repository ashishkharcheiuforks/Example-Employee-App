apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: "androidx.navigation.safeargs"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.fahim.example_employee_app"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'com.fahim.example_employee_app.CustomAndroidJunitRunner'
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug{
            shrinkResources false
            testCoverageEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            testProguardFile 'proguard-test-rules.pro'
        }
    }

    kapt {
        generateStubs = true
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

dependencies {
    def lifecycle_version = "2.1.0"
    def paging_version = "2.1.0"
    def room_version = "2.2.1"
    def dagger_version = "2.25.2"
    def dagger_assisted_injection_version = "0.5.1"
    def retrofit_version = "2.4.0"
    def okHttp_version = "4.2.1"
    def work_version = "2.2.0"
    def mockito_version = "3.1.0"
    def coroutines_version = "1.3.2"


    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.navigation:navigation-fragment:2.1.0'
    implementation 'androidx.navigation:navigation-ui:2.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.1.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //android lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    androidTestImplementation "androidx.arch.core:core-testing:$lifecycle_version"

    //pagination
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    //room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    //workManager
    implementation "androidx.work:work-runtime-ktx:$work_version"
    androidTestImplementation "androidx.work:work-testing:$work_version"

    //retrofit
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okHttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp_version"

    //dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    compileOnly 'javax.annotation:jsr250-api:1.0'
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    compileOnly "com.squareup.inject:assisted-inject-annotations-dagger2:$dagger_assisted_injection_version"
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:$dagger_assisted_injection_version"

    //cosin loading view
    implementation 'com.github.NikitaGordia:Cosin:1.1.0'

    //material rating bar
    implementation 'me.zhanghai.android.materialratingbar:library:1.3.2'

    //logger
    implementation 'com.orhanobut:logger:2.2.0'

    //mockito
    testImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    testImplementation "org.mockito:mockito-inline:$mockito_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    androidTestImplementation 'com.github.tmurakami:dexopener:2.0.4'
    androidTestImplementation 'androidx.test:runner:1.2.0'

    //coroutines-test
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

    //truth
    testImplementation "com.google.truth:truth:1.0"
    androidTestImplementation "com.google.truth:truth:1.0"
}
